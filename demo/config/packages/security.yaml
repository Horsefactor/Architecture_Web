security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
            
    # https://symfony.com/doc/current/security.html#where-do-User-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        app_user_provider: 
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        main:
            anonymous: true
            stateless: true

            provider: app_user_provider
            
            json_login:
                check_path: /api/authentication_token
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            form_login: 
                login_path: security_login
                check_path: security_login
                

            logout:
                path: security_logout
                target: home
                
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
